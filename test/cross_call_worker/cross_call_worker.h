/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package command-line-arguments */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 3 "main.go"

typedef struct { float x, y; } Vector2;
typedef struct { float x, y, z; } Vector3;
typedef struct { float x, y, z, w; } Vector4;
typedef struct { float m[4][4]; } Matrix4x4;
static int DaysInYear(void* funcPtr) {
	return ((int (*)(void)) funcPtr)();
}

#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern __declspec(dllexport) void NoParamReturnVoid();
extern __declspec(dllexport) GoUint8 NoParamReturnBool();
extern __declspec(dllexport) GoInt8 NoParamReturnChar8();
extern __declspec(dllexport) GoUint16 NoParamReturnChar16();
extern __declspec(dllexport) GoInt8 NoParamReturnInt8();
extern __declspec(dllexport) GoInt16 NoParamReturnInt16();
extern __declspec(dllexport) GoInt32 NoParamReturnInt32();
extern __declspec(dllexport) GoInt64 NoParamReturnInt64();
extern __declspec(dllexport) GoUint8 NoParamReturnUInt8();
extern __declspec(dllexport) GoUint16 NoParamReturnUInt16();
extern __declspec(dllexport) GoUint32 NoParamReturnUInt32();
extern __declspec(dllexport) GoUint64 NoParamReturnUInt64();
extern __declspec(dllexport) GoUintptr NoParamReturnPointer();
extern __declspec(dllexport) GoFloat32 NoParamReturnFloat();
extern __declspec(dllexport) GoFloat64 NoParamReturnDouble();
extern __declspec(dllexport) GoUintptr NoParamReturnFunction();
extern __declspec(dllexport) GoString NoParamReturnString();
extern __declspec(dllexport) GoSlice NoParamReturnArrayBool();
extern __declspec(dllexport) GoSlice NoParamReturnArrayChar8();
extern __declspec(dllexport) GoSlice NoParamReturnArrayChar16();
extern __declspec(dllexport) GoSlice NoParamReturnArrayInt8();
extern __declspec(dllexport) GoSlice NoParamReturnArrayInt16();
extern __declspec(dllexport) GoSlice NoParamReturnArrayInt32();
extern __declspec(dllexport) GoSlice NoParamReturnArrayInt64();
extern __declspec(dllexport) GoSlice NoParamReturnArrayUInt8();
extern __declspec(dllexport) GoSlice NoParamReturnArrayUInt16();
extern __declspec(dllexport) GoSlice NoParamReturnArrayUInt32();
extern __declspec(dllexport) GoSlice NoParamReturnArrayUInt64();
extern __declspec(dllexport) GoSlice NoParamReturnArrayPointer();
extern __declspec(dllexport) GoSlice NoParamReturnArrayFloat();
extern __declspec(dllexport) GoSlice NoParamReturnArrayDouble();
extern __declspec(dllexport) GoSlice NoParamReturnArrayString();
extern __declspec(dllexport) Vector2 NoParamReturnVector2();
extern __declspec(dllexport) Vector3 NoParamReturnVector3();
extern __declspec(dllexport) Vector4 NoParamReturnVector4();
extern __declspec(dllexport) Matrix4x4 NoParamReturnMatrix4x4();
extern __declspec(dllexport) void Param1(GoInt32 a);
extern __declspec(dllexport) void Param2(GoInt32 a, GoFloat32 b);
extern __declspec(dllexport) void Param3(GoInt32 a, GoFloat32 b, GoFloat64 c);
extern __declspec(dllexport) void Param4(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d);
extern __declspec(dllexport) void Param5(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e);
extern __declspec(dllexport) void Param6(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e, GoInt8 f);
extern __declspec(dllexport) void Param7(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e, GoInt8 f, GoString g);
extern __declspec(dllexport) void Param8(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e, GoInt8 f, GoString g, GoUint16 h);
extern __declspec(dllexport) void Param9(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e, GoInt8 f, GoString g, GoUint16 h, GoInt16 k);
extern __declspec(dllexport) void Param10(GoInt32 a, GoFloat32 b, GoFloat64 c, Vector4 d, GoSlice e, GoInt8 f, GoString g, GoUint16 h, GoInt16 k, GoUintptr l);
extern __declspec(dllexport) void ParamRef1(GoInt32* a);
extern __declspec(dllexport) void ParamRef2(GoInt32* a, GoFloat32* b);
extern __declspec(dllexport) void ParamRef3(GoInt32* a, GoFloat32* b, GoFloat64* c);
extern __declspec(dllexport) void ParamRef4(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d);
extern __declspec(dllexport) void ParamRef5(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e);
extern __declspec(dllexport) void ParamRef6(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e, GoInt8* f);
extern __declspec(dllexport) void ParamRef7(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e, GoInt8* f, GoString* g);
extern __declspec(dllexport) void ParamRef8(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e, GoInt8* f, GoString* g, GoUint16* h);
extern __declspec(dllexport) void ParamRef9(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e, GoInt8* f, GoString* g, GoUint16* h, GoInt16* k);
extern __declspec(dllexport) void ParamRef10(GoInt32* a, GoFloat32* b, GoFloat64* c, Vector4* d, GoSlice* e, GoInt8* f, GoString* g, GoUint16* h, GoInt16* k, GoUintptr* l);
extern __declspec(dllexport) void ParamRefVectors(GoSlice* p1, GoSlice* p2, GoSlice* p3, GoSlice* p4, GoSlice* p5, GoSlice* p6, GoSlice* p7, GoSlice* p8, GoSlice* p9, GoSlice* p10, GoSlice* p11, GoSlice* p12, GoSlice* p13, GoSlice* p14, GoSlice* p15);
extern __declspec(dllexport) GoInt64 ParamAllPrimitives(GoUint8 p1, GoUint16 p2, GoInt8 p3, GoInt16 p4, GoInt32 p5, GoInt64 p6, GoUint8 p7, GoUint16 p8, GoUint32 p9, GoUint64 p10, GoUintptr p11, GoFloat32 p12, GoFloat64 p13);
extern __declspec(dllexport) void ReverseCall(GoString test);

#ifdef __cplusplus
}
#endif
